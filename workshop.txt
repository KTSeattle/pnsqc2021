Prerequisites
--------------
#1) Install the git client on your local computer.

Go here:
https://git-scm.com/book/en/v2/Getting-Started-Installing-Git
Install the precompiled Git tools for your operating system

a) For Windows 
  https://git-scm.com/download/win
  
b) For Linux
  sudo dnf install git-all
  
c) For MacOS
  run git from the Terminal the very first time.
  $ git --version
  if that doesn't work 
  https://git-scm.com/download/mac

Choose all the defaults...
Except: Choose whatever editor is most comfortable for you 

#2) Sign up for a github account
Follow this link:
https://github.com/signup?source=login

Use a real email address, so you can get the email confirmations & launch code
Follow the instructions for signing up 
Suggest choices:
  Just me
  Student
  Choose 
  - Collborative coding 
  - Automation and CI/CD
  - Security 
  - Project Management 
  - Community
"Continue for free" 

You can play with the hello world repo project if you want 
https://guides.github.com/activities/hello-world/


Exercises
--------------
#1) Fork the workshop Repo from my account on Github 
https://github.com/mxmoss/pnsqc2021

Explore the github account 


#2) Clone the project locally
a) Make a space for working on your project locally
I'm using a directory called 'workshop' under the 'temp' directory on a windows system 
open Terminal in macOS or Command Prompt or PowerShell in Windows.
(Windows: [ctrl]+[Esc] | Cmd | [enter])  
(MacOS: [Command]+[Space] | Terminal.app | [Enter])

Just work in the current directory 

//C:\Users\moss>mkdir \temp\workshop
//C:\Users\moss>cd \temp\workshop

b) clone it
C:\temp\workshop>git clone https://github.com/comicsbin/pnsqc2021.git
Cloning into 'pnsqc2021'...
remote: Enumerating objects: 4, done.
remote: Counting objects: 100% (4/4), done.
remote: Compressing objects: 100% (3/3), done.
remote: Total 4 (delta 0), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (4/4), done.
Checking connectivity... done.

c) verify 
Now you can see your files are copied locally 

C:\temp\workshop>dir pnsqc2021 
 Directory of C:\temp\workshop
08/06/2021  09:02 AM    <DIR>          .
08/06/2021  09:02 AM    <DIR>          ..
08/06/2021  09:02 AM    <DIR>          pnsqc2021
               0 File(s)              0 bytes
               3 Dir(s)  73,824,370,688 bytes free

C:\temp\workshop>cd pnsqc2021

C:\temp\workshop\pnsqc2021>

//Should this be a slide?
Let's talk about git command line 
  git (no parameters) 
  git help -g and git help -a  list more help 
  git status 
  git config 
  
  

#3) Create a local file, commit changes and push to your repo 

Part 1) Add a feature
We don't want to disrupt production, so we're going to create a branch for working on this. 
git checkout -b my-feat1
Should respond with:
Switched to a new branch 'my-feat1'

//Also, we need to set configuration - email and username
git config --global user.email "you@example.com"
git config --global user.name "Your Name

//Now I'm free to do whatever I want in my branch. I can't affect production without commit back to the 'main' branch (production)

a) Create the file index.md 
Windows: notepad index.md 
Linux: vim index.md
Linux: nano index.md 
MacOS: You can use vim, nano or TextEdit (GUI) 

 edit the file 
# PNSQC 2021 Workshop
- This is my first github pages feature

Save 

c) Let's check your work 
- You have a file 
Run a git status:
C:\temp\workshop\pnsqc2021>git status
On branch moss-feat1
Untracked files:
  (use "git add <file>..." to include in what will be committed)

        index.md

nothing added to commit but untracked files present (use "git add" to track)

Oops, this file isn't being tracked. 
And we're on the main branch. 
Let's fix this:
git checkout -b myfirst-feat
git add index.md 
git status 

Now you can run
git status 

//Commit it
git commit -m "my first commit"
[moss-feat1 123d2c4] my first feature
 1 file changed, 2 insertions(+)
 create mode 100644 index.md
 
//
push to remote repository
It will ask you for your credentials, since you're pushing to a remote repo on the hosting service 
Side note: re passwords and tokens 
https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token
https://docs.github.com/en/github/extending-github/git-automation-with-oauth-tokens

C:\temp\workshop\pnsqc2021>git push -u origin my-feat1
Fatal: AggregateException encountered.
Username for 'https://github.com': comicsbin
Password for 'https://comicsbin@github.com':
Counting objects: 3, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 365 bytes | 0 bytes/s, done.
Total 3 (delta 0), reused 0 (delta 0)
remote:
remote: Create a pull request for 'moss-feat1' on GitHub by visiting:
remote:      https://github.com/comicsbin/pnsqc2021/pull/new/moss-feat1
remote:
To https://github.com/comicsbin/pnsqc2021.git
 * [new branch]      moss-feat1 -> moss-feat1
Branch moss-feat1 set up to track remote branch moss-feat1 from origin.
 
